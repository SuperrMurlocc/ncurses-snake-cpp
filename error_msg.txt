==11587== Memcheck, a memory error detector
==11587== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11587== Using Valgrind-3.18.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==11587== Command: ./winsys
==11587== Parent PID: 11440
==11587== 
==11587== Warning: set address range perms: large range [0x7fff20066000, 0x80001fe66000) (defined)
==11587== Warning: set address range perms: large range [0x7fff20066000, 0x7fff7fe42000) (defined)
==11587== Warning: set address range perms: large range [0x7fff8e2e2000, 0x7fffc0066000) (noaccess)
==11587== Warning: set address range perms: large range [0x7fffc0066000, 0x7fffe2f2a000) (defined)
==11587== Warning: set address range perms: large range [0x7fffe2f2a000, 0x7fffffe00000) (noaccess)
==11587== Invalid write of size 8
==11587==    at 0x10000457C: PointStack::push(CPoint const&) (stack.h:49)
==11587==    by 0x10000434C: PointStack::operator+=(CPoint const&) (stack.h:81)
==11587==    by 0x10000403B: CSnake::generateStartingConditions() (snake.h:46)
==11587==    by 0x100003F2F: CSnake::CSnake(CRect, char) (snake.h:202)
==11587==    by 0x100003ACF: CSnake::CSnake(CRect, char) (snake.h:200)
==11587==    by 0x1000038F8: main (main.cpp:9)
==11587==  Address 0x100600000 is not stack'd, malloc'd or (recently) free'd
==11587== 
==11587== 
==11587== Process terminating with default action of signal 11 (SIGSEGV)
==11587==  Access not within mapped region at address 0x100600000
==11587==    at 0x10000457C: PointStack::push(CPoint const&) (stack.h:49)
==11587==    by 0x10000434C: PointStack::operator+=(CPoint const&) (stack.h:81)
==11587==    by 0x10000403B: CSnake::generateStartingConditions() (snake.h:46)
==11587==    by 0x100003F2F: CSnake::CSnake(CRect, char) (snake.h:202)
==11587==    by 0x100003ACF: CSnake::CSnake(CRect, char) (snake.h:200)
==11587==    by 0x1000038F8: main (main.cpp:9)
==11587==  If you believe this happened as a result of a stack
==11587==  overflow in your program's main thread (unlikely but
==11587==  possible), you can try to increase the size of the
==11587==  main thread stack using the --main-stacksize= flag.
==11587==  The main thread stack size used in this run was 8388608.
==11587== 
==11587== HEAP SUMMARY:
==11587==     in use at exit: 0 bytes in 0 blocks
==11587==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==11587== 
==11587== All heap blocks were freed -- no leaks are possible
==11587== 
==11587== For lists of detected and suppressed errors, rerun with: -s
==11587== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
